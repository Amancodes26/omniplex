name: Build and deploy Node.js app to Azure Web App - omniplexai

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Enable Corepack and install dependencies
        run: |
          corepack enable
          yarn install
      - name: Build application
        run: yarn build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Prepare deployment package for standalone build
        run: |
          set -e
          
          mkdir -p deployment-package
          
          # Copy standalone files
          echo "Copying standalone files..."
          cp -R .next/standalone/* deployment-package/
          echo "✅ Standalone files copied"
          
          # Create nextjs directory instead of .next to avoid gitignore issues
          echo "Creating nextjs directory in deployment package..."
          mkdir -p deployment-package/nextjs
          echo "✅ nextjs directory created"
          
          # Copy static files
          if [ -d .next/static ]; then
            echo "Copying static files..."
            cp -R .next/static deployment-package/nextjs/static
            echo "✅ Static files copied"
          fi
          
          # Copy BUILD_ID and other essential files
          echo "Copying BUILD_ID..."
          cp .next/BUILD_ID deployment-package/nextjs/BUILD_ID
          echo "✅ BUILD_ID copied"
          
          echo "Copying manifest files..."
          [ -f .next/routes-manifest.json ] && cp .next/routes-manifest.json deployment-package/nextjs/
          [ -f .next/prerender-manifest.json ] && cp .next/prerender-manifest.json deployment-package/nextjs/
          [ -f .next/package.json ] && cp .next/package.json deployment-package/nextjs/
          [ -f .next/required-server-files.json ] && cp .next/required-server-files.json deployment-package/nextjs/
          
          # Copy public folder
          if [ -d public ]; then
            echo "Copying public folder..."
            cp -R public deployment-package/public
            echo "✅ Public folder copied"
          fi
          
          # Copy package files
          cp package.json deployment-package/
          cp yarn.lock deployment-package/
          echo "✅ Package files copied"
          
          # Final verification
          echo ""
          echo "=== FINAL VERIFICATION ==="
          echo "BUILD_ID verification:"
          if [ -f deployment-package/nextjs/BUILD_ID ]; then
            echo "✅ BUILD_ID found in deployment package"
            echo "Content: $(cat deployment-package/nextjs/BUILD_ID)"
          else
            echo "❌ BUILD_ID NOT found in deployment package"
            exit 1
          fi
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment-package
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./deployment

      - name: Rename nextjs directory to .next
        run: |
          echo "Renaming nextjs directory to .next..."
          if [ -d ./deployment/nextjs ]; then
            mv ./deployment/nextjs ./deployment/.next
            echo "✅ Directory renamed to .next"
          else
            echo "❌ nextjs directory not found"
            exit 1
          fi
      - name: Verify deployment structure
        run: |
          echo "=== DEPLOYMENT VERIFICATION ==="
          echo "Contents of deployment directory:"
          ls -la ./deployment/
          echo ""
          echo "Check for .next directory:"
          if [ -d ./deployment/.next ]; then
            echo "✅ .next directory found"
            ls -la ./deployment/.next/
          else
            echo "❌ .next directory NOT found"
            exit 1
          fi
          echo ""
          echo "Check for BUILD_ID:"
          if [ -f ./deployment/.next/BUILD_ID ]; then
            echo "✅ BUILD_ID found with content:"
            cat ./deployment/.next/BUILD_ID
          else
            echo "❌ BUILD_ID NOT found"
            exit 1
          fi
          echo ""
          echo "Check for server.js:"
          if [ -f ./deployment/server.js ]; then
            echo "✅ server.js found"
          else
            echo "❌ server.js not found"
            exit 1
          fi
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A710D8AC2F3C4741A1D3BAE272225977 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_598B45F58F3E411F843535247B69A342 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_86687C770A2743D7845F1E5D6BA93A8C }}
          auth-type: oidc

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'omniplexai'
          slot-name: 'Production'
          package: ./deployment