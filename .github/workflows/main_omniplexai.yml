name: Build and deploy Node.js app to Azure Web App - omniplexai

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Enable Corepack and install dependencies
        run: |
          corepack enable
          yarn install

      - name: Build application
        run: yarn build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Prepare deployment package for standalone build
        run: |
          mkdir -p deployment-package

          # Copy standalone server and dependencies
          cp -R .next/standalone/* deployment-package/

          # Create .next directory and copy static files
          mkdir -p deployment-package/.next
          cp -R .next/static deployment-package/.next/

          # Copy essential .next files including BUILD_ID
          cp .next/BUILD_ID deployment-package/.next/
          cp .next/routes-manifest.json deployment-package/.next/ 2>/dev/null || true
          cp .next/prerender-manifest.json deployment-package/.next/ 2>/dev/null || true
          cp .next/package.json deployment-package/.next/ 2>/dev/null || true

          # Copy public folder if it exists
          if [ -d public ]; then
            cp -R public deployment-package/public
          fi

          # Copy package.json and yarn.lock
          cp package.json deployment-package/
          cp yarn.lock deployment-package/

          # Verify the structure
          echo "Deployment package structure:"
          ls -la deployment-package/
          echo "Checking .next directory:"
          ls -la deployment-package/.next/ || echo ".next directory not found"
          echo "Checking for BUILD_ID:"
          cat deployment-package/.next/BUILD_ID || echo "BUILD_ID not found"
          echo "Checking for server.js:"
          ls -la deployment-package/server.js || echo "server.js not found"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment-package  # Changed: Remove the /* to preserve directory structure

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./  # Changed: Download to current directory

      - name: Verify deployment structure
        run: |
          echo "Contents of deployment-package directory:"
          ls -la ./deployment-package/
          echo "Checking for server.js:"
          ls -la ./deployment-package/server.js || echo "server.js not found"
          echo "Checking for .next directory:"
          ls -la ./deployment-package/.next/ || echo ".next directory not found"
          echo "Checking for BUILD_ID:"
          cat ./deployment-package/.next/BUILD_ID || echo "BUILD_ID not found"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A710D8AC2F3C4741A1D3BAE272225977 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_598B45F58F3E411F843535247B69A342 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_86687C770A2743D7845F1E5D6BA93A8C }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'omniplexai'
          slot-name: 'Production'
          package: ./deployment-package  # Changed: Point to the correct directory